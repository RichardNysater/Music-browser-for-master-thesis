/* app css stylesheet */
.menu {
    list-style: none;
    border-bottom: 0.1em solid black;
    margin-bottom: 2em;
    padding: 0 0 0.5em;

}

.menu:before {
    content: "[";
}

/* Sticky footer */
html {
    position: relative;
    min-height: 100%;
}

body {
    /* Margin bottom by footer height*/
    margin-bottom: 70px;

    overflow-y: scroll; /* Always display scrollbar to prevent pushing content */
}

.footer {
    position: absolute;
    bottom: 0;
    width: 100%;

    /*Set the fixed height of the footer here*/
    height: 60px;
    background-color: #f5f5f5;
}

.menu:after {
    content: "]";
}

.menu > li {
    display: inline;
}

.menu > li:before {
    content: "|";
    padding-right: 0.3em;
}

.menu > li:nth-child(1):before {
    content: "";
    padding: 0;
}

/* Player footer */
.player-footer {
    background-color: #f5f5f5;
}

.artist-title-text, .title-text {
    text-align: center;
}

.left-buttons {
    padding-top: 5%;
}

.right-buttons {
    padding-top: 5%;
}

.cur-duration {
    text-align: right;
    left: 2.5%;
}

.max-duration {
    text-align: left;
    left: -20px;
}

.vol-down-icon{
    top: 23px;
    left: -20px;
}

.vol-up-icon{
    top: -18px;
    left: 92px;
}

.volume-bar{
    top:10px;
    position:relative;
}

.slider-selection {
    background: #9d9d9d;
}

.slider-track-high {
    background: #e1e1e1;
}


/* Playlist on the left */
.playlist-item{
    padding: 0;
}

.playlist-item-title{
    text-align: center;
    padding: 10px 15px;
}

.playlist-item-remove{
    padding: 10px 0;
}

.clickable {
    cursor: pointer;
}

#playlist {
    z-index: 100;
    width: 110px;
    position: absolute;
}

/* Animations */

/* Playlist animation */
.playlist-item.ng-enter {
    /* standard transition code */
    transition: 0.5s linear all;
    opacity:0;
}
.playlist-item.ng-enter-stagger {
    /* this will have a 100ms delay between each successive leave animation */
    transition-delay: 0.1s;
    animation-delay: 0.1s;

    /* As of 1.4.4, this must always be set: it signals ngAnimate
      to not accidentally inherit a delay property from another CSS class */
    transition-duration: 0s;
}
.playlist-item.ng-enter.ng-enter-active {
    /* standard transition styles */
    opacity:1;
}

/* Player footer animations */
.fade-in-out {
  transition: 1s linear all;
  opacity: 1;
}

.fade-in-out.ng-hide {
  opacity: 0;
}


/* Error box */
.noSongsFoundError{
    position:absolute;
    text-align: center;
    width: 20%;
    max-width: 150px;
    min-width: 120px;
    padding:0;
    pointer-events: none;
}

/* Animations for the error box */
.animate-if.ng-enter{
    transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 1s;
}

.animate-if.ng-enter,
.animate-if.ng-leave.ng-leave-active {
    opacity:0;
}

.animate-if.ng-leave,
.animate-if.ng-enter.ng-enter-active {
    opacity:1;
}

